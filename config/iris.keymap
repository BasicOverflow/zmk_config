/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N0    &kp N9    &kp N8    &kp N7    &kp N6    &kp DEL
                &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T         &kp P     &kp O     &kp I     &kp U     &kp Y     &kp QUOT
                &kp CAPS   &kp A     &kp S     &kp D     &kp F     &kp G         &kp SCLN  &kp L     &kp K     &kp J     &kp H     &kp RSFT
                &kp LCTRL  &kp Z     &kp X     &kp C     &kp V     &kp B         &kp LBKT  &kp RBKT  &kp N     &kp M     &kp COMMA &kp DOT
                                               &kp LSFT  &mo 1     &kp SPACE     &kp ENTER &mo 2     &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &kp GRAVE  &kp F1    &kp F2    &kp F3    &kp F4    &kp F5        &kp F12   &kp F11   &kp F10   &kp F9    &kp F7    &kp F6
                &kp TAB    &trans    &kp UP    &trans    &trans    &kp LBKT      &kp EQL   &kp PPLS  &kp MINUS &kp BSLH  &kp S(N9) &kp S(BSLS)
                &kp CAPS   &kp LEFT  &kp DOWN  &kp RIGHT &trans    &kp LBRACE    &trans    &trans    &trans    &trans    &kp RBRC  &kp RSFT
                &kp RCTRL  &trans    &trans    &trans    &trans    &kp S(LBKT)   &kp PIPE  &kp RBRC  &trans    &trans    &trans    &trans
                                               &trans    &trans    &trans        &trans    &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
                &kp F12    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5        &trans    &trans    &trans    &trans    &trans    &trans
                &rgb_toggle &S(KC_1) &S(KC_2) &S(KC_3)  &S(KC_4)  &S(KC_5)      &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
                &rgb_mode  &kp MPRV  &kp MNXT &kp VOLU  &kp PGUP  &S(KC_MINUS)  &kp HUI   &kp SAI   &kp VAI   &kp HOME  &kp EQL   &trans
                &kp MUTE   &kp MSTP  &kp MPLY &kp VOLD  &kp PGDN  &kp MINUS     &kp HUD   &kp SAD   &kp VAD   &kp END   &S(KC_EQL)&trans
                                               &trans    &trans    &trans        &trans    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
                &kp TRNS   &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS      &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS
                &kp TRNS   &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS      &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS
                &kp TRNS   &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS      &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS
                &kp TRNS   &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS      &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS  &kp TRNS
                                               &kp TRNS  &kp TRNS  &kp TRNS      &kp TRNS  &kp TRNS  &kp TRNS
            >;
        };
    };

    // Encoder Configuration
    &encoder1 {
        bindings = <&inc_pgup &dec_pgdn>;  // Encoder 1 for page up/down
    };

    &encoder2 {
        bindings = <&inc_vol_up &dec_vol_down>;  // Encoder 2 for volume control
    };
};
